
BipartitionList.cpp,274
BipartitionList::~BipartitionList()~BipartitionList5,34
void BipartitionList::fillList(Tree &tree, unordered_map<string,int> posMeaning)fillList12,123
BitSet<uint64_t>* BipartitionList::extractBip(TreeElem *elem, unordered_map<string,int> &posMeaning)extractBip27,479

BipartitionList.hpp,404
class BipartitionListBipartitionList7,80
  BipartitionList(int _numTax) : numTax(_numTax){} BipartitionList10,114
  vector<BitSet<uint64_t>*> getList(){return bipartitions;}  getList13,256
  vector<string> getMeaning(){return bipMeaning; }getMeaning14,318
  vector<BitSet<uint64_t>*> bipartitions;bipartitions18,467
  vector<string> bipMeaning; bipMeaning19,509
  int numTax;  numTax20,539

BitSet.cpp,1973
#define COUNT_WIDTH COUNT_WIDTH4,24
#define HAVE_64BITHAVE_64BIT6,56
template<> uint64_t BitSet<uint64_t>::allOne = ULONG_MAX; allOne9,94
template<> uint8_t BitSet<uint64_t>::divOp = 6; divOp10,153
template<> uint64_t* BitSet<uint64_t>::mask = reinterpret_cast<uint64_t*>(new recMask<uint64_t, 64>()); mask11,202
template<> uint64_t* BitSet<uint64_t>::countMask = reinterpret_cast<uint64_t*>(new lookup<uint64_t,COUNT_WIDTH>()); countMask12,307
nat BitSet<uint64_t>::countOneElement(uint64_t element) const countOneElement15,436
template<> uint32_t BitSet<uint32_t>::allOne = UINT_MAX; allOne30,867
template<> uint8_t BitSet<uint32_t>::divOp = 5; divOp31,925
template<> uint32_t* BitSet<uint32_t>::mask = reinterpret_cast<uint32_t*>(new recMask<uint32_t, 32>()); mask32,974
template<> uint32_t* BitSet<uint32_t>::countMask = reinterpret_cast<uint32_t*>(new lookup<uint32_t,COUNT_WIDTH>());countMask33,1079
nat BitSet<uint32_t>::countOneElement(uint32_t element) constcountOneElement35,1206
template<> uint16_t BitSet<uint16_t>::allOne = USHRT_MAX; allOne46,1450
template<> uint8_t BitSet<uint16_t>::divOp = 4; divOp47,1509
template<> uint16_t* BitSet<uint16_t>::mask = reinterpret_cast<uint16_t*>(new recMask<uint16_t, 16>()); mask48,1558
template<> uint16_t* BitSet<uint16_t>::countMask = reinterpret_cast<uint16_t*>(new lookup<uint16_t,COUNT_WIDTH>());countMask49,1663
template<> nat BitSet<uint16_t>::countOneElement(uint16_t element) constcountOneElement50,1779
template<> uint8_t BitSet<uint8_t>::allOne = UCHAR_MAX; allOne58,1947
template<> uint8_t BitSet<uint8_t>::divOp = 3; divOp59,2004
template<> uint8_t* BitSet<uint8_t>::mask = reinterpret_cast<uint8_t*>(new recMask<uint8_t, 8>()); mask60,2052
template<> uint8_t* BitSet<uint8_t>::countMask = reinterpret_cast<uint8_t*>(new lookup<uint8_t,COUNT_WIDTH>());countMask61,2152
template<>  nat BitSet<uint8_t>::countOneElement(uint8_t element) constcountOneElement62,2264

BitSet.hpp,3608
class BitSetBitSet14,202
  T getPart (nat num) const { return bv[num]; }getPart44,744
  friend ostream& operator<<(ostream &stream, const BitSet &rhs)    operator <<52,936
  T *bv;bv62,1169
  uint64_t length; length63,1178
  uint64_t numElems; numElems64,1198
  static const nat maskLength = sizeof(T) * CHAR_BIT; maskLength67,1231
  static const nat maxElem = maskLength - 1;maxElem68,1286
  static T allOne; allOne70,1332
  static uint8_t divOp;divOp71,1352
  static T* mask;mask73,1377
  static T* countMask; countMask74,1395
template<typename T> BitSet<T>::BitSet(nat _numElems)BitSet91,1734
template<typename T> BitSet<T>::~BitSet() ~BitSet100,1991
template<typename T> uint64_t BitSet<T>::convertToInternalSize(uint64_t size)convertToInternalSize105,2052
template<typename T> void BitSet<T>::set()set111,2197
template<typename T> void BitSet<T>::flip()flip123,2472
template<typename T> void BitSet<T>::unset()unset137,2755
template<typename T> BitSet<T>::BitSet(const BitSet & rhs) BitSet146,2892
template<typename T> void BitSet<T>::reset()reset154,3092
template<typename T> inline void BitSet<T>::copyFromToHelper(T *donor, T *result, nat start, nat end)copyFromToHelper163,3229
template<typename T> inline void BitSet<T>::copyFromStart(T *donor, T *result, nat end)copyFromStart169,3445
template<typename T> inline void BitSet<T>::copyToEnd(T *donor, T *result, nat start)copyToEnd176,3625
template<typename T> void BitSet<T>::copyRange( BitSet &donor, nat begin, nat end )  copyRange183,3843
template<typename T> nat BitSet<T>::count() const count212,4511
template<typename T> void BitSet<T>::resize(uint64_t size)resize221,4680
template<typename T> void BitSet<T>::resizeLazy(uint64_t size)resizeLazy240,5188
template<typename T> BitSet<T>& BitSet<T>::operator=(const BitSet<T>& rhs )operator =259,5651
template<typename T> void BitSet<T>::set(nat pos)set274,5941
template<typename T> bool BitSet<T>::test(nat pos)  const test281,6073
template<typename T> void BitSet<T>::flip(nat pos)  flip294,6377
template<typename T> void BitSet<T>::unset(nat pos)  unset301,6514
template<typename T> uint64_t BitSet<T>::internalSize() constinternalSize307,6650
template<typename T> uint64_t BitSet<T>::size() const size312,6734
template<typename T > void BitSet<T>::andify(const BitSet &rhs)andify318,6815
template<typename T> void BitSet<T>::orifyPart(const BitSet &rhs, nat begin, nat end)orifyPart329,7067
template<typename T> void BitSet<T>::orify(const BitSet &rhs)orify366,7773
template <typename T, nat  I> struct recMask recMask375,7982
  recMask<T,I - 1> rest;rest377,8030
  T RES;RES378,8055
  recMask() : RES(1ul << (I-1)) {} recMask379,8064
template <typename T> struct recMask<T, 1> recMask382,8104
  T RES;RES384,8150
  recMask() : RES(1) {}  recMask385,8159
template<nat N> struct BitCount{ enum { RES = ( N & 1 ? 1 : 0 )  + BitCount< (N>>1) >::RES   }; }; BitCount390,8207
template<nat N> struct BitCount{ enum { RES = ( N & 1 ? 1 : 0 )  + BitCount< (N>>1) >::RES   }; }; RES390,8207
template<> struct BitCount<0> { enum {  RES = 0};  }; BitCount391,8307
template<> struct BitCount<0> { enum {  RES = 0};  }; RES391,8307
template<typename T, nat I > struct lookuplookup395,8385
  lookup<T,I-1> rest;rest397,8430
  T RES; RES398,8452
  lookup() : RES(BitCount<I>::RES) {} lookup399,8462
template<typename T> struct lookup<T,0> lookup403,8507
  T RES;    RES405,8552
  lookup() : RES(0) {} lookup406,8565
template<typename T> void BitSet<T>::printRaw(FILE *fh) constprintRaw411,8596

Tree.cpp,248
Tree::Tree(int _numTax)Tree3,21
ostream& operator<<(ostream &out, Tree &tree)operator <<11,118
void nameExtractionHelper(TreeElem* elem, vector<string> &names)nameExtractionHelper18,210
vector<string> Tree::getTaxaNames()getTaxaNames30,463

Tree.hpp,438
class TreeTree5,61
  TreeElem* getNextElem(){return &(allocatedElems[elemsUsed++]); } getNextElem9,104
  int getNumTax(){return numTax;}getNumTax10,172
  TreeElem* getStart(){return start;} getStart11,206
  void setStart(TreeElem *_start){start = _start; }setStart12,245
  int elemsUsed;   elemsUsed16,341
  int numTax; numTax17,361
  vector<TreeElem> allocatedElems; allocatedElems18,376
  TreeElem* start; start19,412

TreeElem.cpp,67
ostream& operator<<(ostream& out, TreeElem &elem)operator <<6,50

TreeElem.hpp,225
class TreeElemTreeElem4,16
  TreeElem()TreeElem7,44
  bool isTip(){return down[0] == nullptr && down[1] == nullptr; }isTip13,133
  TreeElem *down[2]; down15,200
  TreeElem *up;up16,222
  string label; label17,238

TreeReader.cpp,315
int getNumTreeHelper(const char *fileName)getNumTreeHelper11,168
TreeReader::TreeReader( char *fileName)TreeReader25,345
TreeReader::~TreeReader()~TreeReader39,576
TreeElem* TreeReader::traverseLegacy(All *tr,node* p , Tree &tree )traverseLegacy50,694
void TreeReader::readTree(Tree &tree)readTree86,1560

TreeReader.hpp,366
class TreeReaderTreeReader8,86
  bool hasMoreTrees(){return treesRead < numTrees; }hasMoreTrees14,193
  int getNumTax(){return numTax; }getNumTax15,246
  int numTrees; numTrees20,353
  int treesRead; treesRead21,370
  int numTax; 			// NOTICE all our trees need to have the same number of taxa  numTax22,388
  FILE *fh; fh23,468
  All *tr ; tr24,481

global.cpp,102
void errorExit(int e)errorExit5,25
FILE *myfopen(const char *path, const char *mode)myfopen13,120

global.hpp,29
typedef int nat; nat23,280

main.cpp,43
int main(int argc, char* argv[])main8,83

raxmlLegacy.cpp,3068
#define printBothOpen printBothOpen13,409
static unsigned int KISS32(void)KISS3215,439
stringHashtable *initStringHashTable(unsigned int n)initStringHashTable39,759
static unsigned int  hashString(char *p, unsigned int tableSize)hashString70,1519
void addword(char *s, stringHashtable *h, int nodeNumber)addword81,1682
int getNumberOfTaxa(All *tr, char *bootStrapFile)getNumberOfTaxa108,2199
boolean setupTree (All *tr, char *bootstrapFile)setupTree187,3951
nodeptr findAnyTip(nodeptr p, int numsp)findAnyTip293,5928
void hookupAdd(nodeptr p, nodeptr q, int numBranches)hookupAdd299,6053
void hookup (nodeptr p, nodeptr q, double *z, int numBranches)hookup314,6260
void hookupDefault (nodeptr p, nodeptr q, int numBranches)hookupDefault328,6437
static boolean treeLabelEnd (int ch)treeLabelEnd340,6612
static boolean  treeGetLabel (FILE *fp, char *lblPtr, int maxlen)treeGetLabel362,6919
static boolean  treeFlushLabel (FILE *fp)treeFlushLabel410,7717
int lookupWord(char *s, stringHashtable *h)lookupWord415,7818
int treeFindTipByLabelString(char  *str, All *tr)treeFindTipByLabelString430,8086
int treeFindTipName(FILE *fp, All *tr)treeFindTipName447,8383
static boolean treeProcessLength (FILE *fp, double *dptr)treeProcessLength462,8587
static int treeFlushLen (FILE  *fp)treeFlushLen480,8975
boolean isTip(int number, int maxTips)isTip503,9298
static char *Tree2StringREC(char *treestr, All *tr, nodeptr p, boolean printBranchLengths, boolean printNames, boolean printLikelihood, boolean rellTree, boolean finalPrint, int perGene, boolean branchLabelSupport, boolean printSHSupport)Tree2StringREC514,9432
static double getBranchLength(All *tr, int perGene, nodeptr p)getBranchLength594,11934
static nodeptr uprootTree (All *tr, nodeptr p, boolean readBranchLengths, boolean readConstraint)uprootTree612,12235
char *Tree2String(char *treestr, All *tr, nodeptr p, Tree2String701,14639
boolean whitechar (int ch)whitechar716,15109
static void  treeEchoContext (FILE *fp1, FILE *fp2, int n)treeEchoContext722,15206
int treeFinishCom (FILE *fp, char **strp)treeFinishCom743,15580
static int treeGetCh (FILE *fp) treeGetCh760,16045
static boolean treeNeedCh (FILE *fp, int c1, char *where)treeNeedCh776,16339
static boolean addElementLen (FILE *fp, All *tr, nodeptr p, boolean readBranchLengths, boolean readNodeLabels, int *lcount)addElementLen801,16821
int getTreeStringLength(char *fileName)getTreeStringLength883,19099
int treeReadLen (FILE *fp, All *tr, boolean readBranches, boolean readNodeLabels, boolean topologyOnly, boolean completeTree) treeReadLen899,19279
void getxnode (nodeptr p)getxnode1025,22368
entry *initEntry(void)initEntry1039,22523
FILE *getNumberOfTrees(All *tr, char *fileName)getNumberOfTrees1057,22868
void readBestTree(All *tr, FILE *file)readBestTree1081,23172
void readBootstrapTree(All *tr, FILE *file)readBootstrapTree1087,23268
char *writeTreeToString(All *tr, boolean printBranchLengths)writeTreeToString1093,23369
void freeTree(All *tr)freeTree1103,23614

raxmlLegacy.hpp,3579
typedef char boolean;boolean22,268
#define NOT NOT25,306
#define TRUE TRUE26,321
#define FALSE FALSE27,348
#define CALLOC(CALLOC28,375
#define ABS(ABS29,419
#define FOR_0_LIMIT(FOR_0_LIMIT30,465
#define FOR_N_LIMIT(FOR_N_LIMIT31,532
#define PR PR32,604
#define SWAP(SWAP33,629
#define USE_UPPER_TRIANGLE_LSI(USE_UPPER_TRIANGLE_LSI34,691
#define USE_UPPER_TRIANGLE_TII(USE_UPPER_TRIANGLE_TII35,760
#define MIN(MIN36,849
#define MAX(MAX37,892
#define GET_FROM_UPPER_TRIANGLE(GET_FROM_UPPER_TRIANGLE39,936
#define NUM_BRANCHES NUM_BRANCHES42,1040
#define MASK_LENGTH MASK_LENGTH43,1067
typedef struct entent46,1092
  unsigned int *bitVector;bitVector48,1113
  unsigned int *treeVector;treeVector49,1140
  unsigned int amountTips;amountTips50,1168
  int *supportVector;supportVector51,1195
  unsigned int bipNumber;bipNumber52,1217
  unsigned int bipNumber2;bipNumber253,1243
  unsigned int supportFromTreeset[2]; supportFromTreeset54,1270
  struct ent *next;next55,1309
} entry;entry56,1329
  unsigned int *vector; vector60,1356
  int support;   support61,1381
  struct noderec *oP;oP62,1399
  struct noderec *oQ;oQ63,1421
} branchInfo;branchInfo64,1443
typedef  struct noderecnoderec66,1458
  unsigned int    isPresent[NUM_BRANCHES / MASK_LENGTH];isPresent68,1484
  struct noderec  *backs[NUM_BRANCHES];backs69,1541
  char            xs[NUM_BRANCHES];xs70,1581
  branchInfo      *bInf;bInf71,1617
  double           z[NUM_BRANCHES];z72,1642
  struct noderec  *next;next73,1678
  struct noderec  *back;back74,1703
  unsigned int   hash;hash75,1728
  int              support;support76,1751
  int              number;number77,1779
  char             x;x78,1806
  double **insertionLWs;insertionLWs79,1828
} node, *nodeptr;node80,1853
} node, *nodeptr;nodeptr80,1853
typedef struct stringEntstringEnt82,1872
  int nodeNumber;nodeNumber84,1899
  char *word;word85,1917
  struct stringEnt *next;next86,1931
} stringEntry ;stringEntry87,1957
  unsigned int tableSize;tableSize91,1991
  stringEntry **table;table92,2017
}  stringHashtable;stringHashtable93,2040
typedef struct _All_All96,2062
  nodeptr start;start98,2084
  int mxtips;mxtips99,2101
  int numberOfTrees;numberOfTrees100,2115
  int bitVectorLength;bitVectorLength101,2136
  nodeptr *nodep;nodep102,2159
  int ntips;ntips103,2177
  int nextnode; nextnode104,2190
  int numBranches;numBranches105,2207
  boolean partitionSmoothed[NUM_BRANCHES];partitionSmoothed106,2226
  boolean rooted;rooted107,2269
  stringHashtable *nameHash;nameHash108,2287
  boolean grouped;grouped109,2316
  int *constraintVector;constraintVector110,2335
  char **nameList;nameList111,2360
  char *tree_string;tree_string112,2379
  int treeStringLength;treeStringLength113,2400
  double fracchange;fracchange114,2424
} All;All115,2445
  unsigned int tableSize;tableSize119,2470
  entry **table;table120,2496
  unsigned int entryCount;entryCount121,2513
}  hashtable;hashtable122,2540
#define FC_INIT FC_INIT125,2556
#define zmin zmin126,2589
#define NO_BRANCHES NO_BRANCHES127,2661
#define BIPARTITIONS_ALL BIPARTITIONS_ALL129,2690
#define GET_BIPARTITIONS_BEST GET_BIPARTITIONS_BEST130,2723
#define DRAW_BIPARTITIONS_BEST DRAW_BIPARTITIONS_BEST131,2756
#define BIPARTITIONS_BOOTSTOP BIPARTITIONS_BOOTSTOP132,2789
#define BIPARTITIONS_RF BIPARTITIONS_RF133,2822
#define defaultz defaultz134,2849
#define nmlngth nmlngth135,2928
#define VECTOR_LENGTH VECTOR_LENGTH136,3007

version.hpp,29
#define VERSION VERSION1,0
