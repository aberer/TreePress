##  the standard aliases 
Q ?= @
CCACHE := $(shell which ccache)
RM := $(Q)rm -fr 
GITVERSION_BASE:=-$(shell cat $(VERSIONFILE)  | cut -f 3 -d ' ' | tr -d '"' )



## version related stuff 
NEW_VERSION_WORKS:=$(shell which git > /dev/null  ; echo $$?)
ifeq ($(NEW_VERSION_WORKS),0)
NEW_VERSION:=$(shell git describe 2> /dev/null)
else 
NEW_VERSION:=$(shell cat $(VERSIONFILE) | cut -f 3 -d ' ')
endif



# compiles with avx support, if available 
# HAVE_AVX = $(shell grep "flags\b.*\bavx" /proc/cpuinfo 2> /dev/null | tail -1 | wc -l | tr -d ' \t')
# ifeq ($(HAVE_AVX),1)
# VECT_FLAG = -D__SIM_SSE3 -D__AVX -msse3
# GITVERSION_BASE_VECT:=-AVX$(GITVERSION_BASE)
# else 
# CMP_MESSAGE+="\nNotice: Could not detect AVX support. Code may be slower. If you are sure that your CPU supports AVX, contact the author.\n"
# endif


# compiles with sse3 support, if available 
# HAVE_SSE3=$(shell grep "flags\b.*sse3*" /proc/cpuinfo 2> /dev/null | tail -1 | wc -l | tr -d ' \t')
# ifeq ($(HAVE_AVX),0)
# ifeq ($(HAVE_SSE3),1)
# VECT_FLAG = -D__SIM_SSE3  -msse3
# GITVERSION_BASE_VECT:=-SSE3$(GITVERSION_BASE)
# else 
# CMP_MESSAGE+="\n\nWarning: Could not detect SSE3 support. Code may be slower. Most recent machines should have SSE3 support, please contact the author, if you are sure that your machine does have SSE3 support.\n\n"
# endif
# endif


